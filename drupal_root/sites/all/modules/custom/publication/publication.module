<?php 
/**
 * The PGRR portal is a resource for sharing genomic data in a resource community.
 * Copyright (C) 2015  University of Pittsburgh
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * Implements hook_views_api().
 */
function publication_views_api() {
	return array(
		'api' => 3.0,
	);
}


/**
 * Implements hook_form_FORM_ID_alter()
 */
function publication_form_publication_node_form_alter(&$form, &$form_state, $form_id) {
	drupal_set_title('Submit publication report');
	//TCGA project
	$project = node_load(10);
	$form['instruction'] = array(
		'#markup' => $project->field_instructions_for_submittin['und'][0]['value'],
		'#weight' => -30,
	);
	
	//set value for project field
	if(empty($form['field_project']['und']['#default_value'])){
		$form['field_project']['und']['#default_value'] = 10;
	}
	
	if (!isset($_REQUEST['plain_form'])) {
		 
	  $form['#prefix'] = '<div id="publication_form_wrapper">';
	  $form['#suffix'] = '</div>';
	
	  // dont allow users to directly manipulate the actual pmid field
	  $form['field_publication_pmid']['#disabled'] = true;
	
	  // hide field_publication_date (data) fields
	  unset($form['field_publication_date']);

	  if (!$form_state['submitted'] && !isset($form_state['values']) && !isset($form['#node']->nid)) {
	    foreach (element_children($form) as $form_element) {
	      if (strstr($form_element, 'field_publication_') || 
	        strstr($form_element, 'field_project') ||
	        in_array($form_element,array('title', 'body', 'actions'))) 
	      {
	        unset($form[$form_element]);
	      }
	    }
	    

	    $form['pubmed_lookup'] = array(
	      '#type' => 'fieldset',
	      '#title' => t('PubMed Lookup'),
	      '#weight' => -20,
	      '#collapsible' => true,
	    );
	
	    $form['pubmed_lookup']['pmid'] = array(
	      '#type' => 'textfield',
	      '#title' => t('PubMed ID (PMID)'),
	      '#required' => false,
	      '#default_value' => '',
	      '#required' => true,
	      '#description' => t('Enter a PubMed ID'),
	      '#size' => 60,
	      '#maxlength' => 255,
	      '#weight' => -4
	    );
	    
	    $form['pubmed_lookup']['pubmed_submit'] = array(
	      '#type' => 'submit',
	      '#value' => t('Populate using PubMed'),
	      '#validate' => array('publication_pubmed_lookup_form_validate'),
	      '#submit' => array('publication_pubmed_lookup_form_submit'),
	      '#ajax' => array(
	        'wrapper' => 'publication_form_wrapper',
	        'callback' => 'publication_pubmed_ajax_callback',
	      ),
	    );
	    
	    $form['pubmed_lookup']['default_link'] = array(
	      '#type' => 'markup',
	      '#markup' => '<a href="/node/add/publication?plain_form=true">Click here to manually enter a publication</a>',
	    );
	  }
	
	  if (isset($form_state['pubmed_data'])) {
	    $form['#process'][] = 'publication_node_form_process';
	  }
	  
	} else {
		// hide field_publication_date (data) fields
		unset($form['field_publication_date']);			
	}
}

/**
 * publication_node_form_process
 * After build callback
 *
 * @param mixed $form
 * @param mixed $form_state
 * @return
 *   $form array
 */
function publication_node_form_process($form, &$form_state) {
	$pubmed_data = $form_state['pubmed_data'];
	$form['title']['#default_value'] = $pubmed_data['title'];
	$form['field_publication_pmid'][LANGUAGE_NONE][0]['value']['#default_value'] = $pubmed_data['field_publication_pmid'];
	$form['body'][LANGUAGE_NONE][0]['#default_value'] = $pubmed_data['body'];
	$form['field_publication_journal'][LANGUAGE_NONE][0]['value']['#default_value'] = $pubmed_data['field_publication_journal'];
	$form['field_publication_date'][LANGUAGE_NONE][0]['#default_value']['value'] = $pubmed_data['field_publication_date']['data'];
	$form['field_publication_date_display'][LANGUAGE_NONE][0]['value']['#default_value'] = $pubmed_data['field_publication_date']['display'];
	$form['field_publication_volume'][LANGUAGE_NONE][0]['value']['#default_value'] = $pubmed_data['field_publication_volume'];
	$form['field_publication_issue'][LANGUAGE_NONE][0]['value']['#default_value'] = $pubmed_data['field_publication_issue'];
	$form['field_publication_pagination'][LANGUAGE_NONE][0]['value']['#default_value'] = $pubmed_data['field_publication_pagination'];
	$form['field_publication_url'][LANGUAGE_NONE][0]['#default_value']['title'] = 'PubMed';
	$form['field_publication_url'][LANGUAGE_NONE][0]['#default_value']['url'] = 'http://www.ncbi.nlm.nih.gov/pubmed/' . $pubmed_data['field_publication_pmid'] . '?dopt=Abstract';

// 	foreach ($pubmed_data['field_publication_authors'] as $delta => $formatted_name){
// 		$form['field_publication_authors'][LANGUAGE_NONE][$delta]['formatted_name']['#default_value'] = $formatted_name;
// 	}

	$form['field_publication_authors'][LANGUAGE_NONE][0]['value']['#default_value'] = implode("; ", $pubmed_data['field_publication_authors']);
	return $form;
}

/**
 * publication_pubmed_ajax_callback
 *
 * @param mixed $form
 * @param mixed $form_state
 * @return
 *   $form array
 */
function publication_pubmed_ajax_callback($form, &$form_state) {
	return $form;
}

/**
 * fb_publication_pubmed_lookup_form_validate
 * Validate pmid and initiate pubmed request
 *
 * @param mixed $form
 * @param mixed $form_state
 * @return void
 */
function publication_pubmed_lookup_form_validate($form, &$form_state) {
	global $user;	
	$pmid = $form_state['values']['pmid'];
	$pmid = str_replace(' ', '', $pmid);
	$pmid = preg_replace('/\s+/', '', $pmid);
	
	$query = new EntityFieldQuery();
	$query
	->entityCondition('entity_type', 'node')
	->entityCondition('bundle', 'publication')
	->fieldCondition('field_publication_pmid', 'value', $pmid)
	->propertyCondition('uid', $user->uid);

	$result = $query->execute();
	if (!empty($result)) {
		form_set_error('pmid', t('You have already submitted this publication.'));
		return;
	}

	$Eclient = new BiblioEntrezClient;
	try {
		$result = $Eclient->fetch($pmid);
	} catch (Exception $e) {
		form_set_error($e->getMessage());
	}
	if (!isset($result->PubmedArticle)) {
		form_set_error('pmid', 'No data available for PubMed ID: ' . check_plain($pmid));
		return;
	}
	$data = new FaceBaseEntrezPubmedArticle($result->PubmedArticle);
	$form_state['pubmed_data'] = $data->getPub();
}

/**
 * fb_publication_pubmed_lookup_form_submit
 *
 * @param mixed $form
 * @param mixed $form_state
 * @return void
 */
function publication_pubmed_lookup_form_submit($form, &$form_state) {
	//dpm($form_state);
	if (!empty($form_state['pubmed_data'])) {
		// set correct number of author fields
		$field_state = field_form_get_state(array(), 'field_publication_authors', LANGUAGE_NONE, $form_state);
		$count = count($form_state['pubmed_data']['field_publication_authors']);
		$field_state['items_count'] = $count;
		field_form_set_state(array(), 'field_publication_authors', LANGUAGE_NONE, $form_state, $field_state);
	}

	$form_state['rebuild'] = true;
}